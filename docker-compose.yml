version: '3.7'

services:

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: '${PROJECT_NAME}-nginx'
    working_dir: /var/www
    restart: always
    volumes:
      - ./public:/var/www/public
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '8080:80'
    depends_on:
      - php
      - mysql
#      - postgres

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        XDEBUG_PORT: ${XDEBUG_PORT:-9001}
        USER_UID: ${USER_UID:-1000}
        USER_NAME: ${USER_NAME:-dockeruser}
    container_name: '${PROJECT_NAME}-php'
    working_dir: /var/www
    restart: always
    volumes:
      - .:/var/www
    environment:
      - DOCKER_UID=1000
      - DOCKER_GID=1000

  redis:
    image: redis:5.0.8-alpine
    container_name: '${PROJECT_NAME}-redis'
    expose:
      - 6379

  mysql:
    image: mysql:latest
    container_name: '${PROJECT_NAME}-mysql'
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - ~/docker/mysql:/var/lib/mysql

#  postgres:
#    image: postgres:latest
#    container_name: '${PROJECT_NAME}-postgres'
#    restart: always
#    environment:
#      - POSTGRES_USER=${DB_USERNAME}
#      - POSTGRES_PASSWORD=${DB_PASSWORD}
#      - POSTGRES_DB=${DB_DATABASE}
#      - POSTGRES_PORT=${DB_PORT}
#    ports:
#      - '5432:5432'
#    volumes:
#      - ./docker/postgres:/var/lib/postgres
